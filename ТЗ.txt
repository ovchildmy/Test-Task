ЗАДАЧА

Небольшое веб-приложение, отображающее форму входа/регистрации нового пользователя. 
Продумайте самостоятельно необходимые поля.

1.1) В результате заполнения формы пользователь должен предоставить информацию о себе, 
	которая запишется в БД. После входа должен отображаться профайл зарегистрировавшегося 
	пользователя.

1.2) Используемые технологии/фреймворки/СУБД — на Ваше усмотрение.

ИСПОЛНЕНИЕ

2.1) Форма должна быть выполнена способом, понятным пользователю, содержать необходимые 
	инструкции, комментарии и т.п. (usability).

2.2) Исходный код должен содержать средства верификации и валидации полей, а также защиту
 от некорректного ввода данных, спецсимволов, попыток взлома и т.п.

2.3) Структура базы данных должна быть обоснованной.

2.4) Вспомогательные тексты в форме (названия полей, подсказки, ошибки и пр.) должны быть
 сформулированы грамотно и понятно пользователю, выдержан деловой и уважительный стиль обращения.
 			
2.5) Код должен быть написан понятно и аккуратно, с соблюдением табуляции и прочих элементов 
	написания, без лишних элементов и функций, не имеющих отношения к функционалу тестового 
	задания, снабжен понятными комментариями (документацией).

2.6) Обращаем внимание на то, что имеет значение не только техническая часть выполненного 
задания (коды), но и дизайнерская (внешний вид, логика оформления, полнота инструкций).

2.7) Выполняя тестовое задание, обратите особое внимание на качество и безопасность кода.


ПРИМЕЧАНИЕ

3.1) Читабельность и наличие элементарной архитектуры, ООП приветствуется (задание, где весь 
	код в одном файле будет сразу отклонено).

3.2) Чистота и оформление кода не менее важный фактор, код должен быть написан в едином 
	стиле (желательно в рекомендуемом для конкретного языка). 

3.3) К чистоте относятся отсутствие копипаста и дублирования логики.

3.4) Отсутствие явных уязвимостей (например, SQL-инъекций).
